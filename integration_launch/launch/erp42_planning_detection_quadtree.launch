<launch>

<!--=====================================================================================lidar to camera ========================================================================-->
  <arg name="x1" default="-0.066"/> 
  <arg name="y1" default="0.02"/>
  <arg name="z1" default="0.81"/>

  <arg name="yaw1" default="-1.60"/>
  <arg name="pitch1" default="-0.0264497828456503"/>
  <arg name="roll1" default="-1.52"/>
  <arg name="frame_id1" default="velodyne"/>
  <arg name="child_frame_id1" default="camera"/>
  <arg name="period_in_ms1" default="10"/>
  
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="$(arg x1) $(arg y1) $(arg z1) $(arg yaw1) $(arg pitch1) $(arg roll1) $(arg frame_id1) $(arg child_frame_id1) $(arg period_in_ms1)"/>
  <!-- ======================================================================================================================================================================= -->

  <!-- max velocity -->
  <arg name="maxVelocity"         default="4"/>

  <arg name="version" default="kcity"/>
  <!-- <arg name="version" default="soongsil"/> -->
  <arg name="start_index" default="0"/>

  <!-- soongsil -->
  <!-- <arg name="checkpoint1_x"           default="-22.7482"/>
  <arg name="checkpoint1_y"           default="88.7211"/>
  <arg name="checkpoint1_z"           default="4.9321"/>
  <arg name="checkpoint1_a"           default="-0.0153"/>

  <arg name="checkpoint2_x"           default="3.9687"/>
  <arg name="checkpoint2_y"           default="90.7474"/>
  <arg name="checkpoint2_z"           default="0.0435"/>
  <arg name="checkpoint2_a"           default="-0.0179"/>

  <arg name="checkpoint3_x"           default="-22.5613"/>
  <arg name="checkpoint3_y"           default="89.939"/>
  <arg name="checkpoint3_z"           default="4.8177"/>
  <arg name="checkpoint3_a"           default="-0.0009"/>

  <arg name="checkpoint4_x"           default="1.536"/>
  <arg name="checkpoint4_y"           default="88.6141"/>
  <arg name="checkpoint4_z"           default="0.5552"/>
  <arg name="checkpoint4_a"           default="0.0102"/> -->

  <!-- kcity -->
  <arg name="checkpoint1_x"           default="-71.4674"/>
  <arg name="checkpoint1_y"           default="-64.9395"/>
  <arg name="checkpoint1_z"           default="0.387"/>
  <arg name="checkpoint1_a"           default="3.0293898"/>

  <arg name="checkpoint2_x"           default="-116.84"/>
  <arg name="checkpoint2_y"           default="-65.435"/>
  <arg name="checkpoint2_z"           default="0.6107"/>
  <arg name="checkpoint2_a"           default="3.136635"/>

  <arg name="checkpoint3_x"           default="-80.0792"/>
  <arg name="checkpoint3_y"           default="-66.5155"/>
  <arg name="checkpoint3_z"           default="0.4272"/>
  <arg name="checkpoint3_a"           default="3.0421"/>

  <arg name="checkpoint4_x"           default="-124.6916"/>
  <arg name="checkpoint4_y"           default="-63.1716"/>
  <arg name="checkpoint4_z"           default="0.585"/>
  <arg name="checkpoint4_a"           default="-3.0017208"/>

  <arg name="checkpoint5_x"           default="-208.0092"/>
  <arg name="checkpoint5_y"           default="-65.4242"/>
  <arg name="checkpoint5_z"           default="1.055"/>
  <arg name="checkpoint5_a"           default="3.1265"/>

  <arg name="pathDensity"           default="0.25" /> <!-- distance between each two waypoints 0.25-->
  <arg name="enableSmoothing"        default="true" /> <!-- 1 or 0 -->
  <arg name="enableLaneChange"         default="false" /> <!-- 1 or 0 -->
  <arg name="enableRvizInput"         default="1" /> <!-- 1 or 0 -->
  <arg name="enableReplan"            default="true" /> <!-- 1 or 0 -->
  <arg name="velocitySource"          default="1" /> <!-- read velocities from (0- Odometry, 1- autoware current_velocities, 2- car_info) "" -->
  <arg name="mapSource"             default="0" /> <!-- Autoware=0, Vector Map Folder=1, kml file=2 -->
  <arg name="mapFileName"           default="" /> <!-- incase of kml map source -->
  <arg name="enableDynamicMapUpdate"       default="false" />

<!-- =====================================global_planner=================================== -->
<node pkg="op_global_planner" type="op_global_planner" name="op_global_planner" output="log">

    <param name="pathDensity"         value="$(arg pathDensity)" />
    <param name="enableSmoothing"       value="$(arg enableSmoothing)" />
    <param name="enableLaneChange"       value="$(arg enableLaneChange)" />
    <param name="enableRvizInput"       value="$(arg enableRvizInput)" />
    <param name="enableReplan"         value="$(arg enableReplan)" />
    <param name="velocitySource"       value="$(arg velocitySource)" />
    <param name="mapSource"         value="$(arg mapSource)" />
    <param name="mapFileName"         value="$(arg mapFileName)" />

    <param name="enableDynamicMapUpdate"   value="$(arg enableDynamicMapUpdate)" />

    <!-- kcity -->
    <param name="checkpoint1_x"   value="$(arg checkpoint1_x)" />
    <param name="checkpoint1_y"   value="$(arg checkpoint1_y)" />
    <param name="checkpoint1_z"   value="$(arg checkpoint1_z)" />
    <param name="checkpoint1_a"   value="$(arg checkpoint1_a)" />
    <param name="checkpoint2_x"   value="$(arg checkpoint2_x)" />
    <param name="checkpoint2_y"   value="$(arg checkpoint2_y)" />
    <param name="checkpoint2_z"   value="$(arg checkpoint2_z)" />
    <param name="checkpoint2_a"   value="$(arg checkpoint2_a)" />
    <param name="checkpoint3_x"   value="$(arg checkpoint3_x)" />
    <param name="checkpoint3_y"   value="$(arg checkpoint3_y)" />
    <param name="checkpoint3_z"   value="$(arg checkpoint3_z)" />
    <param name="checkpoint3_a"   value="$(arg checkpoint3_a)" />
    <param name="checkpoint4_x"   value="$(arg checkpoint4_x)" />
    <param name="checkpoint4_y"   value="$(arg checkpoint4_y)" />
    <param name="checkpoint4_z"   value="$(arg checkpoint4_z)" />
    <param name="checkpoint4_a"   value="$(arg checkpoint4_a)" />
    <param name="checkpoint5_x"   value="$(arg checkpoint5_x)" />
    <param name="checkpoint5_y"   value="$(arg checkpoint5_y)" />
    <param name="checkpoint5_z"   value="$(arg checkpoint5_z)" />
    <param name="checkpoint5_a"   value="$(arg checkpoint5_a)" />

    <!-- soongsil -->
    <!-- <param name="checkpoint1_x"   value="$(arg checkpoint1_x)" />
    <param name="checkpoint1_y"   value="$(arg checkpoint1_y)" />
    <param name="checkpoint1_z"   value="$(arg checkpoint1_z)" />
    <param name="checkpoint1_a"   value="$(arg checkpoint1_a)" />
    <param name="checkpoint2_x"   value="$(arg checkpoint2_x)" />
    <param name="checkpoint2_y"   value="$(arg checkpoint2_y)" />
    <param name="checkpoint2_z"   value="$(arg checkpoint2_z)" />
    <param name="checkpoint2_a"   value="$(arg checkpoint2_a)" />
    <param name="checkpoint3_x"   value="$(arg checkpoint3_x)" />
    <param name="checkpoint3_y"   value="$(arg checkpoint3_y)" />
    <param name="checkpoint3_z"   value="$(arg checkpoint3_z)" />
    <param name="checkpoint3_a"   value="$(arg checkpoint3_a)" />
    <param name="checkpoint4_x"   value="$(arg checkpoint4_x)" />
    <param name="checkpoint4_y"   value="$(arg checkpoint4_y)" />
    <param name="checkpoint4_z"   value="$(arg checkpoint4_z)" />
    <param name="checkpoint4_a"   value="$(arg checkpoint4_a)" /> -->

    <param name="version"   value="$(arg version)" />
    <param name="start_index"   value="$(arg start_index)" />

  </node>

<!-- =====================================local_planner=================================== -->
<!-- Behavior selector specific parameters -->
	
	<arg name="evidence_trust_number" 	default="25"/>
	<arg name="use_sim_time" 	default="false"/>
	<arg name="show_driving_path" 	default="true"/>	
			
	<node pkg="op_local_planner" type="op_behavior_selector" name="op_behavior_selector" output="screen">
	
	<param name="evidence_trust_number" 	value="$(arg evidence_trust_number)"/>				
	<param name="use_sim_time" 				value="$(arg use_sim_time)" />
	<param name="show_driving_path" 		value="$(arg show_driving_path)" />
			
	</node>	

  <!-- op_motion_predictor.launch -->
  <arg name="max_distance_to_lane"   default="1.0"/>
  <arg name="prediction_distance"   default="25.0"/> <!-- pre : 0.01 -->
  <arg name="enableGenrateBranches"   default="false"/>
  <arg name="enableCurbObstacles"   default="true" />
  <arg name="distanceBetweenCurbs"   default="0.01" />
  <arg name="visualizationTime"     default="0.10" />
  <arg name="enableStepByStepSignal"   default="false" />
  <arg name="enableParticleFilterPrediction"   default="false" />


  <node pkg="op_local_planner" type="op_motion_predictor" name="op_motion_predictor" output="log"> 

    <param name="max_distance_to_lane"     value="$(arg max_distance_to_lane)"/>
    <param name="prediction_distance"     value="$(arg prediction_distance)"/>
    <param name="enableGenrateBranches"   value="$(arg enableGenrateBranches)"/>
    <param name="enableCurbObstacles"     value="$(arg enableCurbObstacles)" />
    <param name="distanceBetweenCurbs"     value="$(arg distanceBetweenCurbs)" />
    <param name="visualizationTime"     value="$(arg visualizationTime)" />
    <param name="enableStepByStepSignal"   value="$(arg enableStepByStepSignal)" />
    <param name="enableParticleFilterPrediction"   value="$(arg enableParticleFilterPrediction)" />

  </node>

  <!-- Trajectory Generation Specific Parameters -->
  <arg name="samplingTipMargin"     default="1.5"/>
  <arg name="samplingOutMargin"     default="3.0" /> <!--rollin length--> 
  <arg name="samplingSpeedFactor"   default="0.25" />
  <arg name="enableHeadingSmoothing"   default="false" />

  <node pkg="op_local_planner" type="op_trajectory_generator" name="op_trajectory_generator" output="log">

  <param name="samplingTipMargin"     value="$(arg samplingTipMargin)"  />
  <param name="samplingOutMargin"     value="$(arg samplingOutMargin)" />
  <param name="samplingSpeedFactor"     value="$(arg samplingSpeedFactor)" />
  <param name="enableHeadingSmoothing"   value="$(arg enableHeadingSmoothing)" />

  </node>

  <!-- op_common_params -->
  <!-- <arg name="mapSource"         default="0" />  --><!-- Autoware=0, Vector Map Folder=1, kml=2 -->
  <!--<arg name="mapFileName"       default="" />-->

  <arg name="localPathDensity"       default="0.6" />
  <arg name="rollOutDensity"       default="2.0" />
  <arg name="rollOutsNumber"       default="4"    />  <!-- 2 -->

  <arg name="minVelocity"         default="0.1" />
  <arg name="maxLocalPlanDistance"     default="15" />
  <arg name="horizonDistance"       default="20"  />

  <arg name="minFollowingDistance"     default="20.0"  /><!-- should be bigger than Distance to follow -->
  <arg name="minDistanceToAvoid"     default="7" /> <!-- should be smaller than minFollowingDistance and larger than maxDistanceToAvoid -->
  <arg name="maxDistanceToAvoid"     default="0.5"  /> <!-- should be smaller than minDistanceToAvoid -->
  <arg name="speedProfileFactor"    default="0.25"  />

  <arg name="smoothingDataWeight"      default="0.45"  />
  <arg name="smoothingSmoothWeight"    default="0.40"  />

  <arg name="horizontalSafetyDistance"  default="0.1"  /> <!-- pre : 0.1-->
  <arg name="verticalSafetyDistance"  default="0.1"  /> <!-- pre : 0.1 -->

  <arg name="enableSwerving"       default="true"  />
  <arg name="enableFollowing"       default="false" />
  <arg name="enableTrafficLightBehavior" default="false" />
  <arg name="enableStopSignBehavior"   default="false" />
  <!--<arg name="enableLaneChange"       default="false" /> -->

  <!--<arg name="width"           default="0.79"  />-->
  <arg name="width"           default="1.14"  /> <!--< 2020 default="0.79"  />-->
  <arg name="length"           default="2.0"  /> <!--< 2020  length (no bumper)="1.35", include bumper 2.0  />-->
  <arg name="wheelBaseLength"       default="1.05"  /> <!--< 2020 default="1.12"  />-->
  <arg name="turningRadius"        default="2.6"  /> 
  <arg name="maxSteerAngle"       default="1.0" />

  <arg name="steeringDelay"       default="0.3" />
  <arg name="minPursuiteDistance"   default="3.0"  />
  <arg name="additionalBrakingDistance" default="1.0"  />

  <arg name="giveUpDistance"       default="-0.5"  />

  <arg name="maxAcceleration"       default="0.8" />
  <arg name="maxDeceleration"       default="-3.0" />

  <arg name="localVelocitySource"      default="1" /> <!-- read velocities from (0- Odometry, 1- autoware current_velocities, 2- car_info) "" -->
  <node pkg="op_local_planner" type="op_common_params" name="op_common_params" output="log">

  <!-- Common Parameters -->

  <param name="mapSource"         value="$(arg mapSource)" /> <!-- Autoware=0, Vector Map Folder=1, kml=2 -->
  <param name="mapFileName"         value="$(arg mapFileName)" />

  <param name="pathDensity"           value="$(arg localPathDensity)" />
  <param name="rollOutDensity"       value="$(arg rollOutDensity)" />
  <param name="rollOutsNumber"       value="$(arg rollOutsNumber)"    />

  <param name="maxVelocity"         value="$(arg maxVelocity)" />
  <param name="minVelocity"         value="$(arg minVelocity)" />
  <param name="maxLocalPlanDistance"     value="$(arg maxLocalPlanDistance)" />
  <param name="horizonDistance"       value="$(arg horizonDistance)" />

  <param name="minFollowingDistance"     value="$(arg minFollowingDistance)"  /> <!-- should be bigger than Distance to follow -->
  <param name="minDistanceToAvoid"     value="$(arg minDistanceToAvoid)" /> <!-- should be smaller than minFollowingDistance and larger than maxDistanceToAvoid -->
  <param name="maxDistanceToAvoid"     value="$(arg maxDistanceToAvoid)"  /> <!-- should be smaller than minDistanceToAvoid -->
  <param name="speedProfileFactor"    value="$(arg speedProfileFactor)"  />

  <param name="smoothingDataWeight"    value="$(arg smoothingDataWeight)"  />
  <param name="smoothingSmoothWeight"    value="$(arg smoothingSmoothWeight)"  />

  <param name="horizontalSafetyDistance"  value="$(arg horizontalSafetyDistance)"  />
  <param name="verticalSafetyDistance"  value="$(arg verticalSafetyDistance)"  />

  <param name="enableSwerving"       value="$(arg enableSwerving)"  />
  <param name="enableFollowing"       value="$(arg enableFollowing)" />
  <param name="enableTrafficLightBehavior" value="$(arg enableTrafficLightBehavior)" />
  <param name="enableStopSignBehavior"   value="$(arg enableStopSignBehavior)" />
  <param name="enableLaneChange"       value="$(arg enableLaneChange)" />

  <param name="width"           value="$(arg width)"  />
  <param name="length"           value="$(arg length)"  />
  <param name="wheelBaseLength"       value="$(arg wheelBaseLength)"  />
  <param name="turningRadius"        value="$(arg turningRadius)"  />
  <param name="maxSteerAngle"       value="$(arg maxSteerAngle)" />

  <param name="steeringDelay"       value="$(arg steeringDelay)" />
  <param name="minPursuiteDistance"     value="$(arg minPursuiteDistance)"  />
  <param name="additionalBrakingDistance" value="$(arg additionalBrakingDistance)"  />

  <param name="giveUpDistance" value="$(arg giveUpDistance)"  />
  <param name="maxAcceleration"       value="$(arg maxAcceleration)" />
  <param name="maxDeceleration"       value="$(arg maxDeceleration)" />

  <param name="velocitySource"      value="$(arg localVelocitySource)" /> <!-- read velocities from (0- Odometry, 1- autoware current_velocities, 2- car_info) "" -->

  </node>
  <!-- Trajectory Evaluation Specific Parameters -->

  <arg name="enablePrediction"       default="false" />
<!--  <arg name="horizontalSafetyDistance"   default="1.2" /> -->
<!--  <arg name="verticalSafetyDistance"     default="0.8" /> -->

  <node pkg="op_local_planner" type="op_trajectory_evaluator" name="op_trajectory_evaluator" output="log">

    <param name="enablePrediction"       value="$(arg enablePrediction)" />
    <param name="horizontalSafetyDistance"   value="$(arg horizontalSafetyDistance)" />
    <param name="verticalSafetyDistance"   value="$(arg verticalSafetyDistance)" />

  </node>
<!--mpc follower-->

 <!-- <arg name="ns" default="/"/>
  <arg name="show_debug_info" default="false" doc="flag to display debug info" />
  <arg name="ctrl_period" default="0.03" doc="control period [s]"/>
  <arg name="traj_resample_dist" default="0.1" doc="ath resampling interval [m]"/>
  <arg name="enable_yaw_recalculation" default="true" doc="flag for recalculation of yaw angle after resampling"/>
  <arg name="admisible_position_error" default="15.0" doc="stop mpc calculation when error is larger than the following value"/>
  <arg name="admisible_yaw_error_deg" default="90.0" doc="stop mpc calculation when error is larger than the following value"/>
  <arg name="enable_path_smoothing" default="true" doc="flag for path smoothing"/>
  <arg name="path_smoothing_times" default="4" doc="number of times of applying path smoothing filter"/>
  <arg name="path_filter_moving_ave_num" default="17" doc="param of moving average filter for path smoothing "/>
  <arg name="curvature_smoothing_num" default="17" doc="point-to-point index distance used in curvature calculation : curvature is calculated from three points p(i-num), p(i), p(i+num)"/>
  <arg name="steering_lpf_cutoff_hz" default="3.0" doc="cutoff frequency of lowpass filter for steering command [Hz]"/>
  <arg name="qp_solver_type" default="unconstraint_fast" doc="optimization solver type. option is unconstraint_fast, unconstraint, and qpoases_hotstart"/>
  <arg name="qpoases_max_iter" default="500" doc="max iteration number for quadratic programming"/>
  <arg name="vehicle_model_type" default="kinematics" doc="vehicle model type for mpc prediction. option is kinematics, kinematics_no_delay, and dynamics"/> -->

  <!-- MPC design parameters -->
  
  <!-- <arg name="mpc_prediction_horizon" default="200" doc="prediction horizon step"/>70
  <arg name="mpc_prediction_sampling_time" default="0.02" doc="prediction horizon period [s]"/>0.1
  <arg name="mpc_weight_lat_error" default="0.01" doc="lateral error weight in matrix Q"/>
  <arg name="mpc_weight_heading_error" default="0.1" doc="heading error weight in matrix Q"/>
  <arg name="mpc_weight_heading_error_squared_vel_coeff" default="0.15" doc="heading error * velocity weight in matrix Q"/>
  <arg name="mpc_weight_steering_input" default="1.0" doc="steering error weight in matrix R"/>
  <arg name="mpc_weight_steering_input_squared_vel_coeff" default="0.1" doc="steering error * velocity weight in matrix R"/>
  <arg name="mpc_weight_lat_jerk" default="0.3" doc="lateral jerk weight in matrix R"/>
  <arg name="mpc_weight_terminal_lat_error" default="1.5" doc="terminal lateral error weight in matrix Q to improve mpc stability"/>
  <arg name="mpc_weight_terminal_heading_error" default="0.5" doc="terminal heading error weight in matrix Q to improve mpc stability"/>
  <arg name="mpc_zero_ff_steer_deg" default="1.0" doc="threshold that feed-forward angle becomes zero"/>
  <arg name="delay_compensation_time" default="0.0" doc="steering input delay time for delay compensation"/>

  <arg name="vehicle_model_steer_tau" default="0.2" doc="steering dynamics time constant (1d approzimation) [s]"/>
  <arg name="vehicle_model_wheelbase" default="1.12" doc="wheel base length [m]"/>
  <arg name="steer_lim_deg" default="27.5" doc="steering angle limit [deg]"/>
  <arg name="steering_gear_ratio" default="72.72" doc="steering gear ratio"/>
 
  <group ns="$(arg ns)">

    <node pkg="mpc_follower" type="mpc_waypoints_converter" name="mpc_waypoints_converter" output="log"/>

    <node pkg="mpc_follower" type="mpc_follower" name="mpc_follower" output="log"> -->

      <!-- system -->
      <!-- <param name="ctrl_cmd_interface" value="all"/>
      <param name="in_waypoints_name" value="/mpc_waypoints"/>
      <param name="in_vehicle_status_name" value="/vehicle_status"/>
      <param name="in_selfpose_name" value="/current_pose"/>
      <param name="out_twist_name" value="/twist_raw"/>
      <param name="out_vehicle_cmd_name" value="/ctrl_raw"/> -->

      <!-- paramters -->
      <!-- <param name="ctrl_period" value="$(arg ctrl_period)"/>
      <param name="traj_resample_dist" value="$(arg traj_resample_dist)"/>
      <param name="admisible_position_error" value="$(arg admisible_position_error)"/>
      <param name="admisible_yaw_error_deg" value="$(arg admisible_yaw_error_deg)"/>
      <param name="path_smoothing_times" value="$(arg path_smoothing_times)"/>
      <param name="show_debug_info" value="$(arg show_debug_info)"/>
      <param name="enable_yaw_recalculation" value="$(arg enable_yaw_recalculation)"/>
      <param name="enable_path_smoothing" value="$(arg enable_path_smoothing)"/>
      <param name="path_filter_moving_ave_num" value="$(arg path_filter_moving_ave_num)"/>
      <param name="curvature_smoothing_num" value="$(arg curvature_smoothing_num)"/>
      <param name="steering_lpf_cutoff_hz" value="$(arg steering_lpf_cutoff_hz)"/>
      <param name="qp_solver_type" value="$(arg qp_solver_type)"/>
      <param name="qpoases_max_iter" value="$(arg qpoases_max_iter)"/>
      <param name="vehicle_model_type" value="$(arg vehicle_model_type)"/>
      <param name="mpc_prediction_horizon" value="$(arg mpc_prediction_horizon)"/>
      <param name="mpc_prediction_sampling_time" value="$(arg mpc_prediction_sampling_time)"/>
      <param name="mpc_weight_lat_error" value="$(arg mpc_weight_lat_error)"/>
      <param name="mpc_weight_heading_error" value="$(arg mpc_weight_heading_error)"/>
      <param name="mpc_weight_heading_error_squared_vel_coeff" value="$(arg mpc_weight_heading_error_squared_vel_coeff)"/>
      <param name="mpc_weight_steering_input" value="$(arg mpc_weight_steering_input)"/>
      <param name="mpc_weight_steering_input_squared_vel_coeff" value="$(arg mpc_weight_steering_input_squared_vel_coeff)"/>
      <param name="mpc_weight_lat_jerk" value="$(arg mpc_weight_lat_jerk)"/>
      <param name="mpc_weight_terminal_lat_error" value="$(arg mpc_weight_terminal_lat_error)"/>
      <param name="mpc_weight_terminal_heading_error" value="$(arg mpc_weight_terminal_heading_error)"/>
      <param name="mpc_zero_ff_steer_deg" value="$(arg mpc_zero_ff_steer_deg)"/>
      <param name="delay_compensation_time" value="$(arg delay_compensation_time)"/>
      <param name="vehicle_model_steer_tau" value="$(arg vehicle_model_steer_tau)"/>
      <param name="vehicle_model_wheelbase" value="$(arg vehicle_model_wheelbase)"/>
      <param name="steer_lim_deg" value="$(arg steer_lim_deg)"/>
      <param name="steering_gear_ratio" value="$(arg steering_gear_ratio)"/>
    </node>

  </group> -->

<!-- twist filter -->
 <!-- For twist_filter -->
  <arg name="wheel_base" default="1.05" /> <!--  2020 wheel base 2.7 -->
     
  <arg name="lateral_accel_limit" default="99.0" />
  <arg name="lateral_jerk_limit" default="99.0" />
  <arg name="lowpass_gain_linear_x" default="0.0" />
  <arg name="lowpass_gain_angular_z" default="0.0" />
  <arg name="lowpass_gain_steering_angle" default="0.0" />

  <param name="vehicle_info/wheel_base" value="$(arg wheel_base)" />

  <!-- For twist_gate -->
  <arg name="loop_rate" default="30.0" />
  <arg name="use_decision_maker" default="false" />

  <!-- rosrun waypoint_follower twist_filter -->
  <node pkg="twist_filter" type="twist_filter" name="twist_filter" output="log">
    <param name="lateral_accel_limit" value="$(arg lateral_accel_limit)" />
    <param name="lateral_jerk_limit" value="$(arg lateral_jerk_limit)" />
    <param name="lowpass_gain_linear_x" value="$(arg lowpass_gain_linear_x)" />
    <param name="lowpass_gain_angular_z" value="$(arg lowpass_gain_angular_z)" />
    <param name="lowpass_gain_steering_angle" value="$(arg lowpass_gain_steering_angle)" />
  </node>

  <node pkg="twist_gate" type="twist_gate" name="twist_gate" output="log">
    <param name="loop_rate" value="$(arg loop_rate)" />
    <param name="use_decision_maker" value="$(arg use_decision_maker)" />
  </node>


    <!-- ================================Detection====================================== -->
    
  <!-- input -->
  <arg name="points_raw_topic_name" default="/points_raw"/>
  <arg name="pose_topic_name" default="/localizer_pose"/>
  <arg name="point_map_topic_name" default="/points_map"/>

  <!-- output -->
  <arg name="publish_no_road_point_topic_name" default="/filtered_points_raw"/>
  <arg name="publish_road_point_topic_name" default="/unfiltered_points_raw"/>

  <node name="road_remover" pkg="road_remover" type="road_remover" output="screen" > 
      <param name="points_raw_topic_name" value="$(arg points_raw_topic_name)" />
      <param name="pose_topic_name" value="$(arg pose_topic_name)" />
      <param name="point_map_topic_name" value="$(arg point_map_topic_name)" />
      <param name="publish_no_road_point_topic_name" value="$(arg publish_no_road_point_topic_name)" />
      <param name="publish_road_point_topic_name" value="$(arg publish_road_point_topic_name)" />
  </node>

  <!-- input -->
  <arg name="points_raw_topic" default="/filtered_points_raw"/> <!-- road_remover -->
  <arg name="road_points_raw_topic" default="/unfiltered_points_raw"/>  <!-- road_remover -->
  <arg name="road_points_topic" default="/local_road_points"/> <!-- road_extractor -->

  <!-- output -->
  <arg name="publish_cloud_clusters_topic_name" default="/detection/lidar_detector/cloud_clusters"/> <!-- cloud_clusters -->
<!--<arg name="publish_object_topic_name" default="/detection/lidar_detector/objects"/>--> <!-- objects -->
  <arg name="publish_object_topic_name" default="/tracked_objects"/> <!--no use kf-->
  
  <arg name="height_from_ground_to_lidar" default="0.89"/>
  <arg name="z_high_limit" default="0.5" />
  <arg name="erase_road_threshold" default="0.2" />

  <arg name="my_car_width" default="0.6" />
  <arg name="my_car_height" default="1.1" />
  <arg name="max_cluster_size" default="500" />

  <arg name="istrackdriving" default="false"/>

  <node name="quadtree_segmentation" pkg="lidar_quadtree_cluster" type="quadtree_segmentation" output="screen">

    <param name="points_raw_topic" value="$(arg points_raw_topic)" />
    <param name="road_points_raw_topic" value="$(arg road_points_raw_topic)" />
    <param name="road_points_topic" value="$(arg road_points_topic)" />
    
    <param name="height_from_ground_to_lidar" value="$(arg height_from_ground_to_lidar)" />
    <param name="z_high_limit" value="$(arg z_high_limit)" />
    <param name="erase_road_threshold" value="$(arg erase_road_threshold)" />

    <param name="my_car_width" value="$(arg my_car_width)"/>
    <param name="my_car_height" value="$(arg my_car_height)"/>
    <param name="max_cluster_size" value="$(arg max_cluster_size)"/>

    <param name="publish_cloud_clusters_topic_name" value="$(arg publish_cloud_clusters_topic_name)"/>
    <param name="publish_object_topic_name" value="$(arg publish_object_topic_name)"/>

    <param name="istrackdriving" value="$(arg istrackdriving)"/>

  </node>
  
	<node pkg="parking_mission" type="parking_mission" name="parking_mission" output="log">
		<param name="parkinglotpoints_file_name" value="/home/autoware/shared_dir/map/parking_mission/kcity_picking_list"/>
    <!-- <param name="parkinglotpoints_file_name" value="/home/autoware/shared_dir/map/parking_mission/soongsil_picking_list.csv"/> -->
    <param name="checkpoint_reach_threshold" value="1.0"/>
    <param name="one_parking_area_point_num" value="5"/>
  </node>

   <arg name="velocity" default="1.0"/>
    <node pkg="final_waypoint_follower" type="final_waypoint_follower" name="final_waypoint_follower" output="screen">
		  <param name="velocity" value="$(arg velocity)"/>
    </node>

  <!-- ======================= range_vision_fusion ======================================-->
  <arg name="detected_objects_range" default="/detection/lidar_detector/objects"/>
  <arg name="detected_objects_vision" default="/detection/image_detector/traffic_sign"/>
  <arg name="camera_info_src" default="/camera_info"/>
  <arg name="min_car_dimensions" default="[3,2,2]"/>
  <arg name="min_person_dimensions" default="[1,2,1]"/>
  <arg name="min_truck_dimensions" default="[4,2,2]"/>
  <arg name="sync_topics" default="true"/>
  <arg name="overlap_threshold" default="0.7"/>
  <arg name="use_vector_map" default="false"/>
  <arg name="namespace" default="/detection/fusion_tools"/>
  <arg name="fused_topic_str" default="/fusion_objects"/>

  <node name="range_vision_fusion_01" pkg="range_vision_fusion" type="range_vision_fusion" output="log">
    <param name="detected_objects_range" value="$(arg detected_objects_range)"/>
    <param name="detected_objects_vision" value="$(arg detected_objects_vision)"/>
    <param name="camera_info_src" value="$(arg camera_info_src)"/>
    <param name="min_car_dimensions" value="$(arg min_car_dimensions)"/>
    <param name="min_person_dimensions" value="$(arg min_person_dimensions)"/>
    <param name="sync_topics" value="$(arg sync_topics)"/>
    <param name="overlap_threshold" value="$(arg overlap_threshold)"/>
    <param name="fused_topic_str" value="$(arg fused_topic_str)"/>
  </node>

  <!-- ============================================================================================================================-->
  
<!-- <node pkg="goal_initial" type="goal_initial" name="goal_initial" output="screen"/> -->
  
  <!--yolo box(traffic light)-->
  <arg name="yolo_debug" default="false"/>
  <node pkg="yolo_traffic_light" name="yolo_traffic_light" type="yolo_traffic_light" output="screen" />
  <param name="yolo_traffic_light/debug" value="$(arg yolo_debug)"/>

  <!-- yolo box(delivery sign) -->
  <arg name="yolo_box_debug" default="false"/>
  <node pkg="yolo_traffic_sign" name="yolo_traffic_sign" type="yolo_traffic_sign" output="log" />
  <param name="yolo_traffic_sign/debug" value="$(arg yolo_box_debug)"/>

  <!--yolo3-->
  <arg name="gpu_device_id" default="0"/>
  <arg name="score_threshold" default="0.23"/>
  <arg name="nms_threshold" default="0.50"/>

  <!-- <arg name="network_definition_file" default="$(find vision_darknet_detect)/darknet/cfg/yolov3.cfg"/> -->
  <arg name="network_definition_file" default="/home/autoware/shared_dir/yolo/Gaussian_yolov3_BDD.cfg"/>
  <!-- <arg name="pretrained_model_file" default="/home/autoware/shared_dir/yolo/yolov3.weights"/> -->
  <arg name="pretrained_model_file" default="/home/autoware/shared_dir/yolo/Gaussian_yolov3_BDD.weights"/>
  <arg name="names_file" default="/home/autoware/shared_dir/yolo/bdd.names"/>
  <!-- <arg name="names_file" default="$(find vision_darknet_detect)/darknet/cfg/coco.names"/> -->

  <arg name="camera_id" default="/"/>
  <arg name="image_src" default="/camera/image_raw"/>
  <!-- <arg name="image_src" default="/usb_cam/image_raw"/> -->

  <node pkg="vision_darknet_detect" name="vision_darknet_detect" type="vision_darknet_detect" output="log">
    <param name="network_definition_file" type="str" value="$(arg network_definition_file)"/>
    <param name="pretrained_model_file" type="str" value="$(arg pretrained_model_file)"/>
    <param name="score_threshold" type="double" value="$(arg score_threshold)"/>
    <param name="nms_threshold" type="double" value="$(arg nms_threshold)"/>
    <param name="gpu_device_id" type="int" value="$(arg gpu_device_id)"/>
    <param name="image_raw_node" type="str" value="$(arg camera_id)$(arg image_src)"/>
    <param name="names_file" type="str" value="$(arg names_file)"/>
  </node>

  <node pkg="detected_objects_visualizer" type="visualize_rects" name="yolo3_rects"         output="screen">
    <param name="image_src" value="$(arg image_src)"/>
    <param name="image_out" value="/image_rects"/>
    <param name="object_src" value="/detection/image_detector/objects"/> <!-- this is fixed by definition -->
  </node>

  <!-- pure pursuit -->
 <arg name="is_linear_interpolation" default="True"/>
  <arg name="const_velocity" default="4.0"/> 
  <arg name="publishes_for_steering_robot" default="False"/>
  <arg name="add_virtual_end_waypoints" default="False"/>
  <arg name="const_lookahead_distance" default="1.0"/>
  <arg name="lookahead_ratio" default="1.5"/> 
  <arg name="minimum_lookahead_distance" default="5.0"/>

  <!-- 0 = waypoints, 1 = provided constant velocity -->
  <arg name="velocity_source" default="0"/>


  <node pkg="pure_pursuit" type="pure_pursuit" name="pure_pursuit" output="log">
    <param name="is_linear_interpolation" value="$(arg is_linear_interpolation)"/>
    <param name="publishes_for_steering_robot" value="$(arg publishes_for_steering_robot)"/>
    <param name="add_virtual_end_waypoints" value="$(arg add_virtual_end_waypoints)"/>
    <param name="const_lookahead_distance" value="$(arg const_lookahead_distance)"/>
    <param name="const_velocity" value="$(arg const_velocity)"/>
    <param name="lookahead_ratio" value="$(arg lookahead_ratio)"/>
    <param name="minimum_lookahead_distance" value="$(arg minimum_lookahead_distance)"/>
    <param name="velocity_source" value="$(arg velocity_source)"/>
  </node>

  
  
  <!--twtwtwtw-->
  <!--<node pkg="tw_collect_rl_data" type="collect" name="collect_rl_data_tw">
      <param name="path" value="/home/autoware/shared_dir/tw_rl/"/>
      <param name="name" value="v0_1_basic_data"/>
  </node>-->


 <!--210724 jw-->
	<!-- <node name="test_0724" pkg="test_0724" type="test_0724" output="log">
	  <param name="epsilon" value="10"/>
  </node> -->

 <!--210825 jw-->
  <!-- <rosparam command="load" file="$(find mission_handler_2021)/cfg/mission_params_parkinglot.yaml"/>
	<node name="mission_manager" pkg="mission_handler_2021" type="mission_manager" output="screen"/> -->

  <!--sm -->
  <!-- <arg name="yolo_debug" default="false"/>
  <node pkg="sm_test_yolo" name="sm_test_yolo" type="sm_test_yolo" output="screen" />
  <param name="sm_test_yolo/debug" value="$(arg yolo_debug)"/> -->

  <!-- atar -->
   <!-- Relay behavior configurations -->
  <!-- <arg name="safety_waypoints_size" default="100" />
  <arg name="update_rate" default="10" /> -->

  <!-- Avoidance behavior configurations -->
  <!-- <arg name="costmap_topic" default="semantics/costmap_generator/occupancy_grid" />
  <arg name="enable_avoidance" default="false" />
  <arg name="avoid_waypoints_velocity" default="10.0" />
  <arg name="avoid_start_velocity" default="3.0" />
  <arg name="replan_interval" default="2.0" />
  <arg name="search_waypoints_size" default="50" />
  <arg name="search_waypoints_delta" default="2" />
  <arg name="closest_search_size" default="30" /> -->

  <!-- A* search configurations -->
  <!-- <arg name="use_back" default="false" />
  <arg name="use_potential_heuristic" default="true" />
  <arg name="use_wavefront_heuristic" default="false" />
  <arg name="time_limit" default="1000.0" />
  <arg name="robot_length" default="4.5" />
  <arg name="robot_width" default="1.75" />
  <arg name="robot_base2back" default="1.0" />
  <arg name="minimum_turning_radius" default="6.0" />
  <arg name="theta_size" default="48" />
  <arg name="curve_weight" default="1.2" />
  <arg name="reverse_weight" default="2.00" />
  <arg name="lateral_goal_range" default="0.5" />
  <arg name="longitudinal_goal_range" default="2.0" />
  <arg name="angle_goal_range" default="6.0" />
  <arg name="obstacle_threshold" default="100" />
  <arg name="potential_weight" default="10.0" />
  <arg name="distance_heuristic_weight" default="1.0" />

  <node pkg="waypoint_planner" type="astar_avoid" name="astar_avoid" output="screen">
    <param name="safety_waypoints_size" value="$(arg safety_waypoints_size)" />
    <param name="update_rate" value="$(arg update_rate)" />

    <remap from="costmap" to="$(arg costmap_topic)" />
    <param name="enable_avoidance" value="$(arg enable_avoidance)" />
    <param name="search_waypoints_size" value="$(arg search_waypoints_size)" />
    <param name="search_waypoints_delta" value="$(arg search_waypoints_delta)" />
    <param name="closest_search_size" value="$(arg closest_search_size)" />
    <param name="avoid_waypoints_velocity" value="$(arg avoid_waypoints_velocity)" />
    <param name="avoid_start_velocity" value="$(arg avoid_start_velocity)" />
    <param name="replan_interval" value="$(arg replan_interval)" />

    <param name="use_back" value="$(arg use_back)" />
    <param name="use_potential_heuristic" value="$(arg use_potential_heuristic)" />
    <param name="use_wavefront_heuristic" value="$(arg use_wavefront_heuristic)" />
    <param name="time_limit" value="$(arg time_limit)" />
    <param name="robot_length" value="$(arg robot_length)" />
    <param name="robot_width" value="$(arg robot_width)" />
    <param name="robot_base2back" value="$(arg robot_base2back)" />
    <param name="minimum_turning_radius" value="$(arg minimum_turning_radius)" />
    <param name="theta_size" value="$(arg theta_size)" />
    <param name="angle_goal_range" value="$(arg angle_goal_range)" />
    <param name="curve_weight" value="$(arg curve_weight)" />
    <param name="reverse_weight" value="$(arg reverse_weight)" />
    <param name="lateral_goal_range" value="$(arg lateral_goal_range)" />
    <param name="longitudinal_goal_range" value="$(arg longitudinal_goal_range)" />
    <param name="obstacle_threshold" value="$(arg obstacle_threshold)" />
    <param name="potential_weight" value="$(arg potential_weight)" />
    <param name="distance_heuristic_weight" value="$(arg distance_heuristic_weight)" />
  </node> -->

</launch>